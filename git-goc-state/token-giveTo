#!/bin/bash

# Usage: token-giveTo <repo-path> <token-type> <recipient-id> <amount>
#
# repo-path: absolute path of the author repository
# token-type: hash of the token
# recipient-id: the author id of the recipient
# amount: the number of tokens that should be burned
#
#
# Transfers the desired amount of tokens to the specified account.
# 
# Exists with exit code 0 on success or exit code 1 on error. If the account has insufficient balance for the transfer, error code 2 is returned.

SCRIPTDIR="$( cd -- "$(dirname "$0")" >/dev/null 2>&1 ; pwd -P )"
REPO_PATH=$1
TOKEN_TYPE=$2
RECIPIENT_ID=$3
AMOUNT=$4
EMPTY_TREE="4b825dc642cb6eb9a060e54bf8d69288fbee4904"

# check input arguments
if test ! -d $REPO_PATH; then
    echo "Invalid repo path '$REPO_PATH'" >&2
    exit 1
fi

cd $REPO_PATH
AUTHOR_ID="$(git config goc.author.id)"

if [ -z $AUTHOR_ID ]; then
    echo "The repository misses goc.author.id" >&2
    exit 1
fi

if [ -z $AMOUNT ] || [ "$(python3 -c "print($AMOUNT <= 0)" )" = "True" ]; then
    echo "Amount is less equal 0" >&2
    exit 1
fi

if [ "$(git cat-file -t $TOKEN_TYPE 2>/dev/null)" = "commit" ]; then
    if [ "$(git show -s --format=%p $TOKEN_TYPE | wc -w)" -ne 0 ]; then
        echo "Token Type '$TOKEN_TYPE' unknown." >&2
    fi
else
    echo "Token Type '$TOKEN_TYPE' unknown." >&2
fi

#check balance
BALANCE=$($SCRIPTDIR/account-balance $REPO_PATH $TOKEN_TYPE $AUTHOR_ID)

if [ $(python3 -c "print($BALANCE < $AMOUNT)")  = "True"  ]; then
    echo "The account has an insufficient number of tokens to transfer." >&2
    exit 1
fi

#get current giveTo amount
GIVE_TO=0
ACCOUNT_REF=$(git show-ref --hash refs/heads/frontier/$TOKEN_TYPE/$AUTHOR_ID)
EMPTY_TREE=$(git hash-object -t tree /dev/null)

if [ ! -z $ACCOUNT_REF ]; then
    GIVE_TO_TREE="$(git ls-tree $ACCOUNT_REF giveTo | awk '{print $3}')"
    if [ ! -z $GIVE_TO_TREE ] && [ $GIVE_TO_TREE != $EMPTY_TREE ]; then
        GIVE_TO_BLOB="$(git ls-tree $GIVE_TO_TREE $RECIPIENT_ID | awk '{print $3}')"
        GIVE_TO="$(git cat-file -p $GIVE_TO_BLOB)"
    fi

    # other fields dind't change:
    CREATED_BLOB=$(git ls-tree $ACCOUNT_REF created | awk '{print $3}')
    BURNED_BLOB=$(git ls-tree $ACCOUNT_REF burned | awk '{print $3}')
    ACK_FROM_TREE=$(git ls-tree $ACCOUNT_REF ackFrom | awk '{print $3}')
else
    # initialize other fields:
    ZERO_BLOB=$(echo "0" | git hash-object --stdin -w )
    EMPTY_TREE=$(git hash-object -w -t tree /dev/null)

    CREATED_BLOB=$ZERO_BLOB
    BURNED_BLOB=$ZERO_BLOB
    ACK_FROM_TREE=$EMPTY_TREE
fi


NEW_AMOUNT=$(python3 -c "print($GIVE_TO + $AMOUNT)")
BLOB=$(echo $NEW_AMOUNT | git hash-object --stdin -w)

# create commit tree
if [ -z $GIVE_TO_TREE ]; then
    NEW_GIVE_TO_TREE=$(echo -e $($SCRIPTDIR/utility/ls-tree-format -b $BLOB:$RECIPIENT_ID) | git mktree)
else
    RECEIVERS=$(git ls-tree $GIVE_TO_TREE | awk '{print $4}')

    CMD="$SCRIPTDIR/utility/ls-tree-format -b $BLOB:$RECIPIENT_ID"

    for r in $RECEIVERS; do
        if [ $r != $RECIPIENT_ID ]; then
            HASH=$(git ls-tree $GIVE_TO_TREE $r | awk '{print $3}')
            CMD="$CMD -b $HASH:$r"
        fi
    done

    NEW_GIVE_TO_TREE=$(echo -e $($CMD) | git mktree)
fi

TREE_STR="$($SCRIPTDIR/utility/ls-tree-format -b $CREATED_BLOB:created -b $BURNED_BLOB:burned -t $NEW_GIVE_TO_TREE:giveTo -t $ACK_FROM_TREE:ackFrom)"
TREE=$(echo -e $TREE_STR | git mktree)

#commit 

# debug message (if enabled)
commit_mgs=""
if [ "$(git config --bool goc.debug)" = "true" ]; then
    commit_mgs="giveTo($TOKEN_TYPE/$AUTHOR_ID, $AMOUNT, $RECIPIENT_ID)"
fi

COMMIT=$(echo "$commit_mgs" | GIT_COMMITTER_NAME="$AUTHOR_ID" GIT_AUTHOR_NAME="$AUTHOR_ID" GIT_COMMITTER_EMAIL="" GIT_AUTHOR_EMAIL="" git commit-tree -S $TREE -p refs/heads/frontier/$TOKEN_TYPE/$AUTHOR_ID)
git update-ref "refs/heads/frontier/$TOKEN_TYPE/$AUTHOR_ID" "$COMMIT"

echo "Transfered $AMOUNT tokens of type '$TOKEN_TYPE' from author '$AUTHOR_ID' to '$RECIPIENT_ID'"