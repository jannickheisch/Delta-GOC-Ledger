#!/bin/bash

# Usage: token-initialize <repo-path> <alias>
#
# repo-path: absolute path where the directory and repository of this author should be initialized
# alias: alias of the initialized token
#
#
# Initializes a new token, with the requested alias. The SHA-1 hash of the commit is the ID of the initialized token
# Returns the ID of the initialized token

SCRIPTDIR="$( cd -- "$(dirname "$0")" >/dev/null 2>&1 ; pwd -P )"
REPO_PATH=$1
TOKEN_ALIAS=$2

# check input arguments
if test ! -d $REPO_PATH; then
    echo "Invalid repo path '$REPO_PATH'" >&2
    exit 1
fi

if [ -z $TOKEN_ALIAS ]; then
    echo "Missing token alias" >&2
    exit 1
fi

cd $REPO_PATH
AUTHOR_ID=$(git config goc.author.id)

if [ -z $AUTHOR_ID ]; then
    echo "The repository misses goc.author.id" >&2
    exit 1
fi

# initilaize token
# 1. Create blob that contains zero and the empty tree and write it to db 
ZERO_BLOB=$(echo "0" | git hash-object --stdin -w )
EMPTY_TREE=$(git hash-object -w -t tree /dev/null)

# 2. create tree pointing to the created blobs and commit it
TREE_STRING=$($SCRIPTDIR/utility/ls-tree-format -b $ZERO_BLOB:created -b $ZERO_BLOB:burned -t $EMPTY_TREE:giveTo -t $EMPTY_TREE:ackFrom)
TREE=$(echo -e $TREE_STRING | git mktree)

COMMIT=$(echo "$TOKEN_ALIAS" | GIT_COMMITTER_NAME="$AUTHOR_ID" GIT_AUTHOR_NAME="$AUTHOR_ID" GIT_COMMITTER_EMAIL="" GIT_AUTHOR_EMAIL="" git commit-tree -S $TREE)

#update refs
git update-ref "refs/heads/frontier/$COMMIT/$AUTHOR_ID" "$COMMIT"
git update-ref "refs/local/token_alias/$TOKEN_ALIAS" "$COMMIT" # a local reference helps to quickly retrieve the token ID for a given token alias

echo $COMMIT
echo "Succesfully created token '$TOKEN_ALIAS'($COMMIT) for account '$AUTHOR_ID'" >&2