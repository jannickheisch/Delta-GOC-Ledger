#!/bin/bash

# Usage: account-balance [-v] <repo-path> <token type> [author-id]
#
#
# repo-path: absolute path of the author repository
# token type: hash of the token
# author-id (optional): the author, for which the balance should be computed; defaults to the author of this repository
#
# 
# Returns the current balance of the given account

REPO_PATH=$1
TOKEN_TYPE=$2
AUTHOR_ID=$3

# check input arguments
if test ! -d $REPO_PATH; then
    echo "Invalid repo path '$REPO_PATH'" >&2
    exit 1
fi

cd $REPO_PATH

if [ -z "$AUTHOR_ID" ]; then
    AUTHOR_ID="$(git config goc.author.id)"
fi

if [ -z $AUTHOR_ID ]; then
    echo "The repository misses goc.author.id" >&2
    exit 1
fi

if [ "$(git cat-file -t $TOKEN_TYPE 2>/dev/null)" = "commit" ]; then
    if [ "$(git show -s --format=%p $TOKEN_TYPE | wc -w)" -ne 0 ]; then
        echo "Token Type '$TOKEN_TYPE' unknown." >&2
    fi
else
    echo "Token Type '$TOKEN_TYPE' unknown." >&2
fi

ACCOUNT_REF=$(git show-ref --hash refs/heads/frontier/$TOKEN_TYPE/$AUTHOR_ID)

if [ -z $ACCOUNT_REF ]; then # this author has never interacted with this token, so its balance is zero 
    echo "0"
    exit 0
fi

# created tokens
CREATED_BLOB=$(git ls-tree $ACCOUNT_REF created | awk '{print $3}')
CREATED=$(git cat-file -p $CREATED_BLOB)

#burned tokens
BURNED_BLOB=$(git ls-tree $ACCOUNT_REF burned | awk '{print $3}')
BURNED=$(git cat-file -p $BURNED_BLOB)

#givenTo tokens
GIVE_TO_AMOUNT="0"
GIVE_TO_TREE="$(git ls-tree $ACCOUNT_REF giveTo | awk '{print $3}')"

GIVE_TO_BLOBS="$(git ls-tree $GIVE_TO_TREE | awk '{print $3}')"

for blob in $GIVE_TO_BLOBS; do
    ACC_GIVE_AMOUNT=$(git cat-file -p $blob)
    GIVE_TO_AMOUNT=$(python3 -c "print($GIVE_TO_AMOUNT + $ACC_GIVE_AMOUNT)")
done

#ackFrom tokens
ACK_FROM_AMOUNT="0"
ACK_FROM_TREE="$(git ls-tree $ACCOUNT_REF ackFrom | awk '{print $3}')"

ACK_FROM_BLOBS="$(git ls-tree $ACK_FROM_TREE | awk '{print $3}')"

for blob in $ACK_FROM_BLOBS; do
    ACC_ACK_AMOUNT=$(git cat-file -p $blob)
    ACK_FROM_AMOUNT=$(python3 -c "print($ACK_FROM_AMOUNT + $ACC_ACK_AMOUNT)")
done


#calculate balance
BALANCE=$(python3 -c "print($CREATED + $ACK_FROM_AMOUNT - $BURNED - $GIVE_TO_AMOUNT)")

echo $BALANCE